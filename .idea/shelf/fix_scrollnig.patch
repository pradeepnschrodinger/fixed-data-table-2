Index: site/Constants.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- site/Constants.js	(date 1546858939000)
+++ site/Constants.js	(revision )
@@ -96,10 +96,10 @@
     title: 'Column Groups',
     description: 'Table with column groupings.',
   },
-  PAGINATION_EXAMPLE: {
-    location: 'example-pagination.html',
-    fileName: 'PaginationExample.js',
-    title: 'Pagination',
+  INFINITE_SCROLL_EXAMPLE: {
+    location: 'example-infinite-scroll.html',
+    fileName: 'InfiniteScrollExample.js',
+    title: 'Infinite Scroll',
     description: 'A table example that pages in data as the user scrolls. We fake this by having a promise that resolves after a few milliseconds',
   },
   FILTER_EXAMPLE: {
Index: src/FixedDataTableCell.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/FixedDataTableCell.js	(date 1546858939000)
+++ src/FixedDataTableCell.js	(revision )
@@ -294,7 +294,10 @@
     }
 
     return (
-      <div className={className} style={style}>
+      // niranjan
+      <div className={className} style={style}
+
+        >
         {columnResizerComponent}
         {columnReorderComponent}
         {content}
Index: src/ReactTouchHandler.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/ReactTouchHandler.js	(date 1546858939000)
+++ src/ReactTouchHandler.js	(revision )
@@ -101,6 +101,7 @@
   }
 
   onTouchStart(/*object*/ event) {
+
     // Start tracking drag delta for scrolling
     this._lastTouchX = event.touches[0].pageX;
     this._lastTouchY = event.touches[0].pageY;
@@ -118,6 +119,7 @@
 
     if (this._stopPropagation()) {
       event.stopPropagation();
+      event.preventDefault(); // niranjan
     }
   }
 
@@ -132,6 +134,7 @@
 
     if (this._stopPropagation()) {
       event.stopPropagation();
+      event.preventDefault(); // niranjan
     }
   }
 
@@ -143,10 +146,12 @@
 
     if (this._stopPropagation()) {
       event.stopPropagation();
+      event.preventDefault(); // niranjan
     }
   }
 
   onTouchMove(/*object*/ event) {
+
     var moveX = event.touches[0].pageX;
     var moveY = event.touches[0].pageY;
 
@@ -180,6 +185,7 @@
     if (Math.abs(this._deltaX) > 2 || Math.abs(this._deltaY) > 2) {
       if (this._stopPropagation()) {
         event.stopPropagation();
+        event.preventDefault(); // niranjan
       }
       changed = true;
     }
Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- README.md	(date 1546858939000)
+++ README.md	(revision )
@@ -38,7 +38,7 @@
 
 Implementing a table involves three component types- `<Table/>`,`<Column/>`, and `<Cell/>`.
 
-`<Table />` contains configuration information for the entire table, like dimensions and row count. It's also where you pass down the data to be rendered in the table. 
+`<Table />` contains configuration information for the entire table, like dimensions and row count.
 
 ```javascript
 
@@ -50,7 +50,6 @@
     width={5000}
     height={5050}
     headerHeight={50}
-    data={rows}>
     ...
   </Table>
 ```    
Index: src/FixedDataTable.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/FixedDataTable.js	(date 1546858939000)
+++ src/FixedDataTable.js	(revision )
@@ -137,13 +137,13 @@
      */
     touchScrollEnabled: PropTypes.bool,
 
-    // TODO (jordan) Remove propType of showScrollbarX & showScrollbarY without losing documentation (moved to scrollFlags)
     /**
      * Boolean flags to control if scrolling with keys is enabled
      */
     keyboardScrollEnabled: PropTypes.bool,
     keyboardPageEnabled: PropTypes.bool,
 
+    // TODO (jordan) Remove propType of showScrollbarX & showScrollbarY without losing documentation (moved to scrollFlags)
     /**
      * Hide the scrollbar but still enable scroll functionality
      */
@@ -566,6 +566,11 @@
 
   componentDidMount() {
     this._reportContentHeight();
+
+    this._tableRef.addEventListener('touchstart', this._touchHandler.onTouchStart, false);
+    this._tableRef.addEventListener('touchend', this._touchHandler.onTouchEnd, false);
+    this._tableRef.addEventListener('touchmove', this._touchHandler.onTouchMove, false);
+    this._tableRef.addEventListener('touchcancel', this._touchHandler.onTouchCancel, false);
   }
 
   componentWillReceiveProps(/*object*/ nextProps) {
@@ -666,6 +671,7 @@
           onScroll={this._onVerticalScroll}
           verticalTop={bodyOffsetTop}
           position={scrollY}
+          touchEnabled={touchScrollEnabled}
         />;
     }
 
@@ -678,6 +684,7 @@
           onScroll={this._onHorizontalScroll}
           position={scrollX}
           size={width}
+          touchEnabled={touchScrollEnabled}
         />;
     }
 
@@ -779,7 +786,10 @@
           style={{top: footOffsetTop}}
         />;
     }
-
+    var tabIndex = null;
+    if (this.props.keyboardPageEnabled || this.props.keyboardScrollEnabled) {
+      tabIndex = 0;
+    }
     return (
       <div
         className={joinClasses(
@@ -787,13 +797,9 @@
           cx('fixedDataTableLayout/main'),
           cx('public/fixedDataTable/main'),
         )}
-        tabIndex={0}
+        tabIndex={tabIndex}
         onKeyDown={this._onKeyDown}
         onWheel={this._wheelHandler.onWheel}
-        onTouchStart={this._touchHandler.onTouchStart}
-        onTouchEnd={this._touchHandler.onTouchEnd}
-        onTouchMove={this._touchHandler.onTouchMove}
-        onTouchCancel={this._touchHandler.onTouchCancel}
         ref={this._onRef}
         style={{
           height: componentHeight,
@@ -857,6 +863,7 @@
   }
 
   _onRef = (div) => {
+    this._tableRef = div;
     if (this.props.stopReactWheelPropagation) {
       this._wheelHandler.setRoot(div);
     }
Index: package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- package.json	(date 1546858939000)
+++ package.json	(revision )
@@ -58,6 +58,7 @@
     "webpack-dev-server": "^2.6.1"
   },
   "scripts": {
+    "webpack": "webpack",
     "site-dev-server": "./build_helpers/startSiteDevServer.sh",
     "site-build": "./build_helpers/buildStaticSite.sh",
     "build-dist": "./build_helpers/buildDist.sh",
Index: examples/TouchScrollExample.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- examples/TouchScrollExample.js	(date 1546858939000)
+++ examples/TouchScrollExample.js	(revision )
@@ -27,6 +27,7 @@
           rowsCount={dataList.getSize()}
           headerHeight={50}
           touchScrollEnabled={true}
+          stopScrollPropagation={true}
           width={1000}
           height={500}
           {...this.props}>
Index: src/Scrollbar.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Scrollbar.js	(date 1546858939000)
+++ src/Scrollbar.js	(revision )
@@ -44,6 +44,7 @@
     position: PropTypes.number,
     size: PropTypes.number.isRequired,
     trackColor: PropTypes.oneOf(['gray']),
+    touchEnabled: PropTypes.bool,
     zIndex: PropTypes.number,
     verticalTop: PropTypes.number
   }
@@ -92,6 +93,8 @@
 
   _onRefFace = (ref) => this._faceRef = ref;
 
+  _onRefRoot = (ref) => this._rootRef = ref;
+
   render() /*?object*/ {
     if (!this.state.scrollable) {
       return null;
@@ -145,6 +148,7 @@
       FixedDataTableTranslateDOMPosition(faceStyle, 0, position, this._initialRender);
     }
 
+    mainStyle.touchAction = 'none';
     mainStyle.zIndex = this.props.zIndex;
 
     if (this.props.trackColor === 'gray') {
@@ -157,10 +161,14 @@
         onBlur={this._onBlur}
         onKeyDown={this._onKeyDown}
         onMouseDown={this._onMouseDown}
+        onTouchCancel={this._onTouchCancel}
+        onTouchEnd={this._onTouchEnd}
+        onTouchMove={this._onTouchMove}
+        onTouchStart={this._onTouchStart}
         onWheel={this._wheelHandler.onWheel}
         className={mainClassName}
         style={mainStyle}
-        tabIndex={0}>
+        ref={this._onRefRoot}>
         <div
           ref={this._onRefFace}
           className={faceClassName}
@@ -186,7 +194,8 @@
     this._mouseMoveTracker = new DOMMouseMoveTracker(
       this._onMouseMove,
       this._onMouseMoveEnd,
-      document.documentElement
+      document.documentElement,
+      this.props.touchEnabled
     );
 
     if (this.props.position !== undefined &&
@@ -322,8 +331,8 @@
       // magically available for browsers somehow.
       var nativeEvent = event.nativeEvent;
       var position = this.state.isHorizontal ?
-        nativeEvent.offsetX || nativeEvent.layerX :
-        nativeEvent.offsetY || nativeEvent.layerY;
+        nativeEvent.offsetX || nativeEvent.layerX || this.getTouchX(nativeEvent) :
+        nativeEvent.offsetY || nativeEvent.layerY || this.getTouchY(nativeEvent);
 
       // MouseDown on the scroll-track directly, move the center of the
       // scroll-face to the mouse position.
@@ -344,9 +353,26 @@
 
     this._mouseMoveTracker.captureMouseMoves(event);
     // Focus the node so it may receive keyboard event.
-    ReactDOM.findDOMNode(this).focus();
+    this._rootRef.focus();
   }
 
+  _onTouchCancel = (/*object*/ event) => {
+    event.stopPropagation();
+  }
+
+  _onTouchEnd = (/*object*/ event) => {
+    event.stopPropagation();
+  }
+
+  _onTouchMove = (/*object*/ event) => {
+    event.stopPropagation();
+  }
+
+  _onTouchStart = (/*object*/ event) => {
+    event.stopPropagation();
+    this._onMouseDown(event);
+  }
+
   _onMouseMove = (/*number*/ deltaX, /*number*/ deltaY) => {
     var props = this.props;
     var delta = this.state.isHorizontal ? deltaX : deltaY;
@@ -474,6 +500,14 @@
     } catch (oops) {
       // pass
     }
+  }
+
+  getTouchX = (/*object*/ e) => {
+    return Math.round(e.targetTouches[0].pageX - e.target.getBoundingClientRect().x);
+  }
+
+  getTouchY = (/*object*/ e) => {
+    return Math.round(e.targetTouches[0].pageY - e.target.getBoundingClientRect().y);
   }
 
   _setNextState = (/*object*/ nextState, /*?object*/ props) => {
Index: examples/PaginationExample.js
===================================================================
--- examples/PaginationExample.js	(date 1546858939000)
+++ examples/InfiniteScrollExample.js	(revision )
@@ -50,7 +50,7 @@
   }
 }
 
-class PaginationExample extends React.Component {
+class InfiniteScrollExample extends React.Component {
   constructor(props) {
     super(props);
 
@@ -124,4 +124,4 @@
   }
 }
 
-module.exports = PaginationExample;
+module.exports = InfiniteScrollExample;
Index: site/examples/ExamplesPage.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- site/examples/ExamplesPage.js	(date 1546858939000)
+++ site/examples/ExamplesPage.js	(revision )
@@ -37,7 +37,7 @@
   [ExamplePages.EXPANDED_EXAMPLE.location]: require('../../examples/ExpandedExample'),
   [ExamplePages.FLEXGROW_EXAMPLE.location]: require('../../examples/FlexGrowExample'),
   [ExamplePages.COLUMN_GROUPS_EXAMPLE.location]: require('../../examples/ColumnGroupsExample'),
-  [ExamplePages.PAGINATION_EXAMPLE.location]: require('../../examples/PaginationExample'),
+  [ExamplePages.INFINITE_SCROLL_EXAMPLE.location]: require('../../examples/InfiniteScrollExample'),
   [ExamplePages.FILTER_EXAMPLE.location]: require('../../examples/FilterExample'),
   [ExamplePages.SORT_EXAMPLE.location]: require('../../examples/SortExample'),
   [ExamplePages.RESPONSIVE_EXAMPLE.location]: require('../../examples/ResponsiveExample'),
Index: src/css/layout/ScrollbarLayout.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/css/layout/ScrollbarLayout.css	(date 1546858939000)
+++ src/css/layout/ScrollbarLayout.css	(revision )
@@ -43,7 +43,7 @@
   z-index: 1;
   transition-duration: 250ms;
   transition-timing-function: ease;
-  transition-property: background-color width position;
+  transition-property: width;
 }
 
 /**
Index: src/vendor_upstream/dom/translateDOMPositionXY.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/vendor_upstream/dom/translateDOMPositionXY.js	(date 1546858939000)
+++ src/vendor_upstream/dom/translateDOMPositionXY.js	(revision )
@@ -30,7 +30,6 @@
     if (!isSafari && BrowserSupportCore.hasCSS3DTransforms()) {
       return function(/*object*/ style, /*number*/ x, /*number*/ y) {
         style[TRANSFORM] ='translate3d(' + x + 'px,' + y + 'px,0)';
-        style[BACKFACE_VISIBILITY] = 'hidden';
       };
     } else {
       return function(/*object*/ style, /*number*/ x, /*number*/ y) {
